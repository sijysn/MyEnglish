{
  "version": 3,
  "sources": [
    "consts/userConsts.js",
    "consts/folderConsts.js",
    "consts/quizConsts.js",
    "actions/userActions.js",
    "components/Logout.jsx",
    "components/Header.jsx",
    "components/LinkButton.jsx",
    "screens/HomeScreen.jsx",
    "screens/LoginScreen.jsx",
    "screens/RegisterScreen.jsx",
    "components/SettingsListItem.jsx",
    "components/ProfileSettingsHeader.jsx",
    "screens/ProfileSettingsScreen.jsx",
    "screens/LoginInfoEditScreen.jsx",
    "consts/genderConsts.js",
    "screens/UserInfoEditScreen.jsx",
    "components/QuizFolderListItem.jsx",
    "actions/folderActions.js",
    "screens/QuizFolderSelectScreen.jsx",
    "components/ActionButton.jsx",
    "components/QuizSettings.jsx",
    "components/Quizzes.jsx",
    "components/QuizResultListItem.jsx",
    "components/QuizResults.jsx",
    "actions/quizActions.js",
    "screens/QuizPageScreen.jsx",
    "components/FolderDeleteDialog.jsx",
    "components/EditingFolderListItem.jsx",
    "screens/EditingFolderSelectScreen.jsx",
    "screens/FolderEditScreen.jsx",
    "screens/FolderCreateScreen.jsx",
    "components/QuizDeleteDialog.jsx",
    "components/QuizListItem.jsx",
    "screens/QuizListScreen.jsx",
    "screens/QuizEditScreen.jsx",
    "screens/QuizCreateScreen.jsx",
    "app/App.jsx",
    "reducers/reducer.js",
    "reducers/userReducers.js",
    "reducers/folderReducers.js",
    "reducers/quizReducers.js",
    "store/store.js",
    "index.js"
  ],
  "names": [
    "USER_LOGIN_REQUEST",
    "USER_LOGIN_SUCCESS",
    "USER_LOGIN_FAIL",
    "USER_LOGOUT",
    "USER_REGISTER_REQUEST",
    "USER_REGISTER_SUCCESS",
    "USER_REGISTER_FAIL",
    "USER_REGISTER_RESET",
    "USER_DETAILS_REQUEST",
    "USER_DETAILS_SUCCESS",
    "USER_DETAILS_FAIL",
    "USER_DETAILS_RESET",
    "USER_DETAILS_UPDATE_REQUEST",
    "USER_DETAILS_UPDATE_SUCCESS",
    "USER_DETAILS_UPDATE_FAIL",
    "USER_DETAILS_UPDATE_RESET",
    "FOLDER_LIST_REQUEST",
    "FOLDER_LIST_SUCCESS",
    "FOLDER_LIST_FAIL",
    "FOLDER_LIST_RESET",
    "FOLDER_SET_REQUEST",
    "FOLDER_SET_SUCCESS",
    "FOLDER_SET_FAIL",
    "FOLDER_RESET",
    "FOLDER_DELETE_REQUEST",
    "FOLDER_DELETE_SUCCESS",
    "FOLDER_DELETE_FAIL",
    "FOLDER_DELETE_RESET",
    "ALL_QUIZ_REQUEST",
    "ALL_QUIZ_SUCCESS",
    "ALL_QUIZ_FAIL",
    "ALL_QUIZ_RESET",
    "ACTIVE_QUIZ_SET_REQUEST",
    "ACTIVE_QUIZ_SET_SUCCESS",
    "ACTIVE_QUIZ_SET_FAIL",
    "ACTIVE_QUIZ_RESET",
    "QUIZ_DELETE_REQUEST",
    "QUIZ_DELETE_SUCCESS",
    "QUIZ_DELETE_FAIL",
    "QUIZ_DELETE_RESET",
    "login",
    "email",
    "password",
    "dispatch",
    "a",
    "type",
    "config",
    "headers",
    "axios",
    "post",
    "username",
    "data",
    "payload",
    "localStorage",
    "setItem",
    "JSON",
    "stringify",
    "response",
    "detail",
    "message",
    "updateUserDetails",
    "firstName",
    "lastName",
    "genderIdentity",
    "birthDate",
    "profession",
    "getState",
    "userInfo",
    "userLogin",
    "Authorization",
    "token",
    "put",
    "Logout",
    "useState",
    "isOpen",
    "setIsOpen",
    "useDispatch",
    "closeDialog",
    "Box",
    "color",
    "Typography",
    "component",
    "variant",
    "onClick",
    "Dialog",
    "open",
    "onClose",
    "DialogTitle",
    "DialogContent",
    "DialogContentText",
    "DialogActions",
    "Button",
    "autoFocus",
    "removeItem",
    "Header",
    "anchorEl",
    "setAnchorEl",
    "closeHandler",
    "useSelector",
    "state",
    "display",
    "top",
    "right",
    "left",
    "p",
    "boxShadow",
    "Container",
    "maxWidth",
    "position",
    "alignItems",
    "to",
    "src",
    "alt",
    "className",
    "style",
    "verticalAlign",
    "transform",
    "e",
    "currentTarget",
    "Menu",
    "keepMounted",
    "Boolean",
    "MenuItem",
    "padding",
    "LinkButton",
    "name",
    "width",
    "HomeScreen",
    "flexDirection",
    "textAlign",
    "pt",
    "pb",
    "maxHeight",
    "overflowY",
    "gutterBottom",
    "justifyContent",
    "margin",
    "LoginScreen",
    "history",
    "useHistory",
    "setEmail",
    "setPassword",
    "loading",
    "error",
    "useEffect",
    "push",
    "CircularProgress",
    "Alert",
    "severity",
    "onSubmit",
    "preventDefault",
    "TextField",
    "required",
    "label",
    "fullWidth",
    "autoComplete",
    "value",
    "onChange",
    "target",
    "mt",
    "RegisterScreen",
    "setFirstName",
    "setLastName",
    "userRegister",
    "success",
    "register",
    "SettingsListItem",
    "title",
    "ListItem",
    "divider",
    "px",
    "overflowX",
    "ListItemText",
    "primary",
    "primaryTypographyProps",
    "ListItemIcon",
    "Tooltip",
    "ProfileSettingsHeader",
    "Grid",
    "container",
    "item",
    "xs",
    "ProfileSettingsScreen",
    "List",
    "LoginInfoEditScreen",
    "confirmPassword",
    "setConfirmPassword",
    "setMessage",
    "userDetailsUpdate",
    "userProfile",
    "genderIdentities",
    "UserInfoEditScreen",
    "setBirthDate",
    "setGenderIdentity",
    "inputGenderIdentity",
    "setInputGenderIdentity",
    "setProfession",
    "userDetails",
    "user",
    "updating",
    "first_name",
    "last_name",
    "birth_date",
    "gender_identity",
    "get",
    "InputLabelProps",
    "shrink",
    "Autocomplete",
    "options",
    "newValue",
    "inputValue",
    "onInputChange",
    "newInputValue",
    "renderInput",
    "params",
    "QuizFolderListItem",
    "listFolders",
    "setFolder",
    "id",
    "deleteFolder",
    "delete",
    "QuizFolderSelectScreen",
    "folderList",
    "folders",
    "map",
    "folder",
    "ActionButton",
    "TypographyVariant",
    "disabled",
    "QuizSettings",
    "setIsStarted",
    "questionCount",
    "setQuestionCount",
    "setError",
    "folderSet",
    "quizList",
    "quizSet",
    "length",
    "paragraph",
    "height",
    "my",
    "direction",
    "justify",
    "spacing",
    "number",
    "index",
    "Number",
    "innerText",
    "mr",
    "replace",
    "s",
    "String",
    "fromCharCode",
    "charCodeAt",
    "Quizzes",
    "setIsFinished",
    "setScore",
    "setWrongQuizList",
    "currentQuestionCount",
    "setCurrentQuestionCount",
    "shuffledQuizList",
    "setShuffledQuizList",
    "setOptions",
    "judge",
    "setJudge",
    "correctSound",
    "Audio",
    "wrongSound",
    "answerWrong",
    "play",
    "currentTime",
    "prev",
    "quizId",
    "lastAnswer",
    "answerCorrectly",
    "changeQuestion",
    "shuffle",
    "useCallback",
    "array",
    "i",
    "j",
    "Math",
    "floor",
    "random",
    "createWrongAnswerNumber",
    "wrongAnswerNumber1",
    "wrongAnswerNumber",
    "changeOptions",
    "correctAnswerIndex",
    "wrongAnswerIndex1",
    "wrongAnswerIndex2",
    "answerQuestion",
    "meaning",
    "checkAnswer",
    "setTimeout",
    "word",
    "option",
    "QuizResultListItem",
    "mistake",
    "QuizResults",
    "score",
    "wrongQuizList",
    "mb",
    "getAllQuizzes",
    "folderId",
    "deleteQuiz",
    "QuizPageScreen",
    "useParams",
    "isStarted",
    "isFinished",
    "folderLoading",
    "folderError",
    "quizLoading",
    "quizError",
    "setQuizzes",
    "FolderDeleteDialog",
    "dialogIsOpen",
    "setDialogIsOpen",
    "backdropIsOpen",
    "setBackdropIsOpen",
    "setLoading",
    "folderDelete",
    "deleteHandler",
    "IconButton",
    "Backdrop",
    "zIndex",
    "backgroundColor",
    "EditingFolderListItem",
    "EditingFolderSelectScreen",
    "FolderEditScreen",
    "setName",
    "setUpdating",
    "updateFolderHandler",
    "FolderCreateScreen",
    "createFolderHandler",
    "QuizDeleteDialog",
    "quizDelete",
    "QuizListItem",
    "isActive",
    "isChecked",
    "setIsChecked",
    "setQuizHandler",
    "is_active",
    "Checkbox",
    "checked",
    "QuizListScreen",
    "allQuizzes",
    "quiz",
    "QuizEditScreen",
    "setWord",
    "setMeaning",
    "updateQuizHandler",
    "fetchQuiz",
    "QuizCreateScreen",
    "createQuizHandler",
    "theme",
    "createMuiTheme",
    "typography",
    "fontFamily",
    "join",
    "App",
    "ThemeProvider",
    "CssBaseline",
    "exact",
    "path",
    "reducer",
    "combineReducers",
    "action",
    "initialState",
    "getItem",
    "parse",
    "middleware",
    "thunk",
    "store",
    "createStore",
    "composeWithDevTools",
    "applyMiddleware",
    "ReactDOM",
    "render",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.9a227ebf.chunk.js",
  "sourcesContent": [
    "export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\nexport const USER_REGISTER_RESET = \"USER_REGISTER_RESET\";\n\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\n\nexport const USER_DETAILS_UPDATE_REQUEST = \"USER_DETAILS_UPDATE_REQUEST\";\nexport const USER_DETAILS_UPDATE_SUCCESS = \"USER_DETAILS_UPDATE_SUCCESS\";\nexport const USER_DETAILS_UPDATE_FAIL = \"USER_DETAILS_UPDATE_FAIL\";\nexport const USER_DETAILS_UPDATE_RESET = \"USER_DETAILS_UPDATE_RESET\";\n",
    "export const FOLDER_LIST_REQUEST = \"FOLDER_LIST_REQUEST\";\nexport const FOLDER_LIST_SUCCESS = \"FOLDER_LIST_SUCCESS\";\nexport const FOLDER_LIST_FAIL = \"FOLDER_LIST_FAIL\";\nexport const FOLDER_LIST_RESET = \"FOLDER_LIST_RESET\";\n\nexport const FOLDER_SET_REQUEST = \"FOLDER_SET_REQUEST\";\nexport const FOLDER_SET_SUCCESS = \"FOLDER_SET_SUCCESS\";\nexport const FOLDER_SET_FAIL = \"FOLDER_SET_FAIL\";\nexport const FOLDER_RESET = \"FOLDER_RESET\";\n\nexport const FOLDER_DELETE_REQUEST = \"FOLDER_DELETE_REQUEST\";\nexport const FOLDER_DELETE_SUCCESS = \"FOLDER_DELETE_SUCCESS\";\nexport const FOLDER_DELETE_FAIL = \"FOLDER_DELETE_FAIL\";\nexport const FOLDER_DELETE_RESET = \"FOLDER_DELETE_RESET\";\n",
    "export const ALL_QUIZ_REQUEST = \"ALL_QUIZ_REQUEST\";\nexport const ALL_QUIZ_SUCCESS = \"ALL_QUIZ_SUCCESS\";\nexport const ALL_QUIZ_FAIL = \"ALL_QUIZ_FAIL\";\nexport const ALL_QUIZ_RESET = \"ALL_QUIZ_RESET\";\n\nexport const ACTIVE_QUIZ_SET_REQUEST = \"ACTIVE_QUIZ_SET_REQUEST\";\nexport const ACTIVE_QUIZ_SET_SUCCESS = \"ACTIVE_QUIZ_SET_SUCCESS\";\nexport const ACTIVE_QUIZ_SET_FAIL = \"ACTIVE_QUIZ_SET_FAIL\";\nexport const ACTIVE_QUIZ_RESET = \"ACTIVE_QUIZ_RESET\";\n\nexport const QUIZ_DELETE_REQUEST = \"QUIZ_DELETE_REQUEST\";\nexport const QUIZ_DELETE_SUCCESS = \"QUIZ_DELETE_SUCCESS\";\nexport const QUIZ_DELETE_FAIL = \"QUIZ_DELETE_FAIL\";\nexport const QUIZ_DELETE_RESET = \"QUIZ_DELETE_RESET\";\n",
    "import axios from \"axios\";\n\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_DETAILS_UPDATE_REQUEST,\n  USER_DETAILS_UPDATE_SUCCESS,\n  USER_DETAILS_UPDATE_FAIL,\n} from \"../consts/userConsts\";\n\nimport { FOLDER_LIST_RESET, FOLDER_RESET } from \"../consts/folderConsts\";\nimport { ALL_QUIZ_RESET, ACTIVE_QUIZ_RESET } from \"../consts/quizConsts\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login/\",\n      {\n        username: email,\n        password: password,\n      },\n      config\n    );\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const register = (firstName, lastName, email, password) => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/register/\",\n      {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password,\n      },\n      config\n    );\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DETAILS_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(\"/api/users/details/\", config);\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserDetails = (\n  email = \"\",\n  password = \"\",\n  firstName = \"\",\n  lastName = \"\",\n  genderIdentity = \"\",\n  birthDate = \"\",\n  profession = \"\"\n) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DETAILS_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      \"/api/users/details/update/\",\n      {\n        email: email,\n        password: password,\n        firstName: firstName,\n        lastName: lastName,\n        genderIdentity: genderIdentity,\n        birthDate: birthDate,\n        profession: profession,\n      },\n      config\n    );\n\n    dispatch({\n      type: USER_DETAILS_UPDATE_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: FOLDER_LIST_RESET });\n  dispatch({ type: FOLDER_RESET });\n  dispatch({ type: ALL_QUIZ_RESET });\n  dispatch({ type: ACTIVE_QUIZ_RESET });\n  localStorage.removeItem(\"userInfo\");\n};\n",
    "import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport { logout } from \"../actions/userActions\";\n\nfunction Logout() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const openDialog = () => setIsOpen(true);\n  const closeDialog = () => setIsOpen(false);\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <Box color=\"inherit\">\n      <Typography\n        component=\"span\"\n        variant=\"h5\"\n        onClick={openDialog}\n        color=\"secondary\"\n      >\n        ログアウト\n      </Typography>\n      <Dialog open={isOpen} onClose={closeDialog}>\n        <DialogTitle>本当にログアウトしますか？</DialogTitle>\n        <DialogContent>\n          <DialogContentText>データは保存されます。</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={closeDialog} color=\"primary\">\n            キャンセル\n          </Button>\n          <Button onClick={logoutHandler} color=\"primary\">\n            ログアウト\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n\nexport default Logout;\n",
    "import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport Logout from \"./Logout\";\n\nfunction Header() {\n  const [anchorEl, setAnchorEl] = useState(\"\");\n\n  const clickHandler = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const closeHandler = () => {\n    setAnchorEl(\"\");\n  };\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  return (\n    <Box\n      display=\"fixed\"\n      top=\"0\"\n      right=\"0\"\n      left=\"0\"\n      p={2}\n      boxShadow=\"0 1px 1px 0 rgba(26, 80, 139, 0.3)\"\n    >\n      <Container maxWidth=\"md\">\n        <Box position=\"relative\">\n          <Box alignItems=\"center\" display=\"flex\">\n            <Link to=\"/\">\n              <img\n                src=\"https://res.cloudinary.com/dfw3mlaic/image/upload/v1620460832/MyEnglish/MyEnglish_aedvce.png\"\n                alt=\"Icon\"\n                className=\"header__icon\"\n              />\n            </Link>\n            <Link to=\"/\">\n              <Typography\n                component=\"span\"\n                variant=\"h4\"\n                style={{ verticalAlign: \"8px\" }}\n              >\n                My English\n              </Typography>\n            </Link>\n          </Box>\n\n          <Box\n            position=\"absolute\"\n            right=\"0\"\n            top=\"50%\"\n            style={{ transform: \"translateY(-50%)\" }}\n          >\n            {userInfo ? (\n              <Box>\n                <Button color=\"inherit\" onClick={clickHandler}>\n                  <Typography component=\"span\" variant=\"h5\" color=\"inherit\">\n                    メニュー\n                  </Typography>\n                </Button>\n                <Menu\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={closeHandler}\n                >\n                  <MenuItem onClick={closeHandler}>\n                    <Link to=\"/profile\">\n                      <Typography component=\"span\" variant=\"h5\" color=\"primary\">\n                        プロフィール設定\n                      </Typography>\n                    </Link>\n                  </MenuItem>\n                  <MenuItem onClick={closeHandler}>\n                    <Logout />\n                  </MenuItem>\n                </Menu>\n              </Box>\n            ) : (\n              <Link to=\"/login\" color=\"inherit\" style={{ padding: \"1rem\" }}>\n                <Typography component=\"span\" variant=\"h5\" color=\"inherit\">\n                  ログイン\n                </Typography>\n              </Link>\n            )}\n          </Box>\n        </Box>\n      </Container>\n    </Box>\n  );\n}\n\nexport default Header;\n",
    "import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction LinkButton({ to, color, style, name }) {\n  return (\n    <Box style={style}>\n      <Link to={to} color={color} style={{ display: \"block\" }}>\n        <Button\n          variant=\"outlined\"\n          color={color}\n          style={{ padding: \"1rem 2rem\", width: \"14rem\" }}\n        >\n          <Typography component=\"span\" variant=\"h5\">\n            {name}\n          </Typography>\n        </Button>\n      </Link>\n    </Box>\n  );\n}\n\nexport default LinkButton;\n",
    "import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport LinkButton from \"../components/LinkButton\";\n\nfunction HomeScreen() {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        textAlign=\"center\"\n        pt={5}\n        pb=\"10rem\"\n        maxHeight=\"100vh\"\n        style={{ overflowY: \"scroll\" }}\n      >\n        <Box pb={10}>\n          <img\n            src=\"https://res.cloudinary.com/dfw3mlaic/image/upload/v1620460832/MyEnglish/MyEnglish_aedvce.png\"\n            alt=\"Icon\"\n            className=\"home__icon\"\n          />\n          <Typography component=\"h1\" variant=\"h1\" gutterBottom>\n            <strong>My English</strong>\n          </Typography>\n          <Typography component=\"h2\" variant=\"h4\">\n            ”自分だけ”の英単語クイズを作ろう！\n          </Typography>\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\">\n          <LinkButton\n            to={userInfo ? \"/quizzes/folders\" : \"/login\"}\n            color=\"inherit\"\n            name=\"クイズ開始\"\n            style={{\n              margin: \"2rem\",\n            }}\n          />\n\n          <LinkButton\n            to={userInfo ? \"/editings/folders\" : \"/login\"}\n            color=\"inherit\"\n            name=\"クイズ編集\"\n            style={{\n              margin: \"2rem\",\n            }}\n          />\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n\nexport default HomeScreen;\n",
    "import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { login } from \"../actions/userActions\";\n\nfunction LoginScreen() {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/\");\n    }\n  }, [history, userInfo]);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        textAlign=\"center\"\n        pt={5}\n        pb=\"10rem\"\n        maxHeight=\"100vh\"\n        style={{ overflowY: \"scroll\" }}\n      >\n        <img\n          src=\"https://res.cloudinary.com/dfw3mlaic/image/upload/v1620460832/MyEnglish/MyEnglish_aedvce.png\"\n          alt=\"Icon\"\n          className=\"login__icon\"\n        />\n        <Typography component=\"h1\" variant=\"h2\">\n          ログイン\n        </Typography>\n\n        {loading && <CircularProgress />}\n        {error && <Alert severity=\"error\">{error}</Alert>}\n\n        <form onSubmit={submitHandler} className=\"login__form\">\n          <TextField\n            required\n            type=\"email\"\n            label=\"メールアドレス\"\n            fullWidth\n            margin=\"normal\"\n            autoFocus\n            autoComplete=\"email\"\n            variant=\"outlined\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n\n          <TextField\n            required\n            type=\"password\"\n            label=\"パスワード\"\n            fullWidth\n            margin=\"normal\"\n            autoComplete=\"current-password\"\n            variant=\"outlined\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n\n          <Box mt={3}>\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n              variant=\"contained\"\n              style={{ padding: \"1rem 2rem\", width: \"14rem\" }}\n            >\n              <Typography component=\"span\" variant=\"h5\">\n                ログイン\n              </Typography>\n            </Button>\n          </Box>\n\n          <Box p={3}>\n            <Link to=\"/register\">\n              <Typography component=\"span\" variant=\"h6\">\n                アカウントがありませんか?{\"   \"}新規登録\n              </Typography>\n            </Link>\n          </Box>\n        </form>\n      </Box>\n    </Container>\n  );\n}\n\nexport default LoginScreen;\n",
    "import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { login, register } from \"../actions/userActions\";\nimport { USER_REGISTER_RESET } from \"../consts/userConsts\";\n\nfunction RegisterScreen() {\n  const history = useHistory();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, success, error } = userRegister;\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(register(firstName, lastName, email, password));\n  };\n\n  useEffect(() => {\n    if (userInfo) history.push(\"/\");\n  }, [userInfo, history]);\n\n  useEffect(() => {\n    if (success) {\n      dispatch({ type: USER_REGISTER_RESET });\n      dispatch(login(email, password));\n    }\n  }, [success, dispatch, email, password]);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        textAlign=\"center\"\n        pt={5}\n        pb=\"10rem\"\n        maxHeight=\"100vh\"\n        style={{ overflowY: \"scroll\" }}\n      >\n        <img\n          src=\"https://res.cloudinary.com/dfw3mlaic/image/upload/v1620460832/MyEnglish/MyEnglish_aedvce.png\"\n          alt=\"Icon\"\n          className=\"login__icon\"\n        />\n        <Typography component=\"h1\" variant=\"h2\">\n          ユーザー登録\n        </Typography>\n\n        {loading && <CircularProgress />}\n        {error && <Alert severity=\"error\">{error}</Alert>}\n\n        <form onSubmit={submitHandler} className=\"login__form\">\n          <TextField\n            required\n            label=\"氏\"\n            fullWidth\n            margin=\"normal\"\n            autoFocus\n            autoComplete=\"email\"\n            variant=\"outlined\"\n            value={lastName}\n            onChange={(e) => setLastName(e.target.value)}\n          />\n\n          <TextField\n            required\n            label=\"名\"\n            fullWidth\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={firstName}\n            onChange={(e) => setFirstName(e.target.value)}\n          />\n\n          <TextField\n            required\n            type=\"email\"\n            label=\"メールアドレス\"\n            fullWidth\n            margin=\"normal\"\n            autoComplete=\"email\"\n            variant=\"outlined\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n\n          <TextField\n            required\n            type=\"password\"\n            label=\"パスワード\"\n            fullWidth\n            margin=\"normal\"\n            autoComplete=\"current-password\"\n            variant=\"outlined\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n\n          <Box mt={3}>\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n              variant=\"contained\"\n              style={{ padding: \"1rem 2rem\", width: \"14rem\" }}\n            >\n              <Typography component=\"span\" variant=\"h5\">\n                登録\n              </Typography>\n            </Button>\n          </Box>\n\n          <Box p={3}>\n            <Link to=\"/login\">\n              <Typography component=\"span\" variant=\"h6\">\n                既にアカウントがありますか?{\"   \"}ログイン\n              </Typography>\n            </Link>\n          </Box>\n        </form>\n      </Box>\n    </Container>\n  );\n}\n\nexport default RegisterScreen;\n",
    "import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Box from \"@material-ui/core/Box\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\n\nfunction SettingsListItem({ title, to }) {\n  return (\n    <ListItem divider>\n      <Box width=\"90%\" px={3} style={{ overflowX: \"hidden\" }}>\n        <ListItemText\n          primary={title}\n          primaryTypographyProps={{ component: \"span\", variant: \"h4\" }}\n        />\n      </Box>\n\n      <ListItemIcon>\n        <Tooltip title=\"変更\">\n          <Link to={to}>\n            <ArrowForwardIosIcon />\n          </Link>\n        </Tooltip>\n      </ListItemIcon>\n    </ListItem>\n  );\n}\n\nexport default SettingsListItem;\n",
    "import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction ProfileSettingsHeader({ to, title }) {\n  return (\n    <Grid container alignItems=\"center\">\n      <Grid item xs={2}>\n        <Link to={to}>\n          <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\n            戻る\n          </Typography>\n        </Link>\n      </Grid>\n      <Grid item xs={8}>\n        <Typography component=\"h1\" variant=\"h3\">\n          {title}\n        </Typography>\n      </Grid>\n      <Grid item xs={2}></Grid>\n    </Grid>\n  );\n}\n\nexport default ProfileSettingsHeader;\n",
    "import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\n\nimport Container from \"@material-ui/core/Container\";\nimport List from \"@material-ui/core/List\";\n\nimport SettingsListItem from \"../components/SettingsListItem\";\nimport ProfileSettingsHeader from \"../components/ProfileSettingsHeader\";\n\nfunction ProfileSettingsScreen() {\n  const history = useHistory();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (!userInfo) history.push(\"/login\");\n  }, [history, userInfo]);\n\n  return (\n    <Box>\n      <Container maxWidth=\"sm\">\n        <Box\n          textAlign=\"center\"\n          pt={5}\n          pb=\"10rem\"\n          maxHeight=\"100vh\"\n          style={{ overflowY: \"scroll\" }}\n        >\n          <ProfileSettingsHeader to=\"/\" title=\"プロフィール設定\" />\n\n          <Box mt=\"3rem\">\n            <List>\n              <SettingsListItem title=\"ログイン情報\" to=\"/profile/logininfo\" />\n              <SettingsListItem title=\"ユーザー情報\" to=\"/profile/userinfo\" />\n            </List>\n          </Box>\n        </Box>\n      </Container>\n    </Box>\n  );\n}\n\nexport default ProfileSettingsScreen;\n",
    "import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport ProfileSettingsHeader from \"../components/ProfileSettingsHeader\";\n\nimport { USER_DETAILS_UPDATE_RESET } from \"../consts/userConsts\";\n\nimport { login, updateUserDetails } from \"../actions/userActions\";\n\nfunction LoginInfoEditScreen() {\n  const history = useHistory();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDetailsUpdate = useSelector((state) => state.userDetailsUpdate);\n  const { loading, success, error, userProfile } = userDetailsUpdate;\n\n  const dispatch = useDispatch();\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUserDetails(email, password));\n  };\n\n  useEffect(() => {\n    if (!userInfo) history.push(\"/login\");\n    else setEmail(userInfo.email);\n  }, [history, userInfo]);\n\n  useEffect(() => {\n    if (success && userProfile) {\n      dispatch({ type: USER_DETAILS_UPDATE_RESET });\n      dispatch(login(email, password));\n      history.push(\"/profile\");\n    }\n  }, [dispatch, success, userProfile, history, email, password]);\n\n  useEffect(() => {\n    if (password !== confirmPassword) setMessage(\"Passwords do not match\");\n    else setMessage(\"\");\n  }, [password, confirmPassword]);\n\n  return (\n    <Box>\n      <Container maxWidth=\"sm\">\n        <Box\n          textAlign=\"center\"\n          pt={5}\n          pb=\"10rem\"\n          maxHeight=\"100vh\"\n          style={{ overflowY: \"scroll\" }}\n        >\n          <ProfileSettingsHeader to=\"/profile\" title=\"ログイン情報設定\" />\n\n          {loading ? (\n            <CircularProgress />\n          ) : (\n            <Box>\n              <form onSubmit={updateHandler} className=\"login__form\">\n                <TextField\n                  required\n                  type=\"email\"\n                  label=\"メールアドレス\"\n                  fullWidth\n                  margin=\"normal\"\n                  autoFocus\n                  variant=\"outlined\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n\n                <TextField\n                  required\n                  type=\"password\"\n                  label=\"パスワード\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n\n                <TextField\n                  required\n                  type=\"password\"\n                  label=\"確認用パスワード\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                />\n\n                {error && <Alert severity=\"error\">{error}</Alert>}\n                {message && <Alert severity=\"error\">{message}</Alert>}\n\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  style={{\n                    padding: \"1rem 2rem\",\n                    width: \"14rem\",\n                    margin: \"2rem 2rem 0\",\n                  }}\n                >\n                  変更\n                </Button>\n              </form>\n            </Box>\n          )}\n        </Box>\n      </Container>\n    </Box>\n  );\n}\n\nexport default LoginInfoEditScreen;\n",
    "export const genderIdentities = [\"男性\", \"女性\", \"その他\", \"未回答\"];\n",
    "import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport ProfileSettingsHeader from \"../components/ProfileSettingsHeader\";\n\nimport { USER_DETAILS_UPDATE_RESET } from \"../consts/userConsts\";\nimport { genderIdentities } from \"../consts/genderConsts\";\n\nimport { getUserDetails, updateUserDetails } from \"../actions/userActions\";\n\nfunction UserInfoEditScreen() {\n  const history = useHistory();\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [birthDate, setBirthDate] = useState(\"\");\n  const [genderIdentity, setGenderIdentity] = useState(\"\");\n  const [inputGenderIdentity, setInputGenderIdentity] = useState(\"\");\n  const [profession, setProfession] = useState(\"\");\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userDetailsUpdate = useSelector((state) => state.userDetailsUpdate);\n  const { loading: updating, success, userProfile } = userDetailsUpdate;\n\n  const dispatch = useDispatch();\n\n  const updateHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateUserDetails(\n        \"\",\n        \"\",\n        firstName,\n        lastName,\n        genderIdentity,\n        birthDate,\n        profession\n      )\n    );\n  };\n\n  useEffect(() => {\n    if (!userInfo) history.push(\"/login\");\n    else if (!user) dispatch(getUserDetails());\n    else {\n      setFirstName(user.first_name ? user.first_name : \"\");\n      setLastName(user.last_name ? user.last_name : \"\");\n      setBirthDate(user.birth_date ? user.birth_date : \"\");\n      setGenderIdentity(user.gender_identity ? user.gender_identity : \"未回答\");\n      setProfession(user.profession ? user.profession : \"\");\n    }\n  }, [history, userInfo, user, dispatch]);\n\n  useEffect(() => {\n    if (success && userProfile) {\n      dispatch({ type: USER_DETAILS_UPDATE_RESET });\n      history.push(\"/profile\");\n    }\n  }, [dispatch, success, history, userProfile]);\n\n  return (\n    <Box>\n      <Container maxWidth=\"sm\">\n        <Box\n          textAlign=\"center\"\n          pt={5}\n          pb=\"10rem\"\n          maxHeight=\"100vh\"\n          style={{ overflowY: \"scroll\" }}\n        >\n          <ProfileSettingsHeader to=\"/profile\" title=\"ユーザー情報設定\" />\n\n          {loading || updating ? (\n            <CircularProgress />\n          ) : error ? (\n            <Alert severity=\"error\">{error}</Alert>\n          ) : (\n            <Box>\n              <form onSubmit={updateHandler} className=\"login__form\">\n                <TextField\n                  required\n                  label=\"氏\"\n                  fullWidth\n                  margin=\"normal\"\n                  autoFocus\n                  variant=\"outlined\"\n                  value={lastName}\n                  onChange={(e) => setLastName(e.target.value)}\n                />\n\n                <TextField\n                  required\n                  label=\"名\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  value={firstName}\n                  onChange={(e) => setFirstName(e.target.value)}\n                />\n\n                <TextField\n                  type=\"date\"\n                  label=\"生年月日\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  InputLabelProps={{ shrink: true }}\n                  value={birthDate}\n                  onChange={(e) => setBirthDate(e.target.value)}\n                />\n\n                <Autocomplete\n                  fullWidth\n                  options={genderIdentities}\n                  value={genderIdentity}\n                  onChange={(e, newValue) => setGenderIdentity(newValue)}\n                  inputValue={inputGenderIdentity}\n                  onInputChange={(e, newInputValue) =>\n                    setInputGenderIdentity(newInputValue)\n                  }\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      required\n                      label=\"性別\"\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                    />\n                  )}\n                />\n\n                <TextField\n                  label=\"職業\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  value={profession}\n                  onChange={(e) => setProfession(e.target.value)}\n                />\n\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  style={{\n                    padding: \"1rem 2rem\",\n                    width: \"14rem\",\n                    margin: \"2rem 2rem 0\",\n                  }}\n                >\n                  変更\n                </Button>\n              </form>\n            </Box>\n          )}\n        </Box>\n      </Container>\n    </Box>\n  );\n}\n\nexport default UserInfoEditScreen;\n",
    "import React from \"react\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\n\nfunction QuizFolderListItem({ name }) {\n  return (\n    <ListItem divider>\n      <ListItemIcon>\n        <FolderIcon />\n      </ListItemIcon>\n      <ListItemText\n        primary={name}\n        primaryTypographyProps={{ component: \"span\", variant: \"h4\" }}\n      />\n    </ListItem>\n  );\n}\n\nexport default QuizFolderListItem;\n",
    "import axios from \"axios\";\n\nimport {\n  FOLDER_LIST_REQUEST,\n  FOLDER_LIST_SUCCESS,\n  FOLDER_LIST_FAIL,\n  FOLDER_SET_REQUEST,\n  FOLDER_SET_SUCCESS,\n  FOLDER_SET_FAIL,\n  FOLDER_DELETE_REQUEST,\n  FOLDER_DELETE_SUCCESS,\n  FOLDER_DELETE_FAIL,\n} from \"../consts/folderConsts\";\n\nexport const listFolders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: FOLDER_LIST_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/folders/`, config);\n\n    dispatch({ type: FOLDER_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: FOLDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const setFolder = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: FOLDER_SET_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/folders/${id}/`, config);\n\n    dispatch({ type: FOLDER_SET_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: FOLDER_SET_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const deleteFolder = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: FOLDER_DELETE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/folders/delete/${id}/`, config);\n\n    dispatch({ type: FOLDER_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: FOLDER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n",
    "import React, { useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport QuizFolderListItem from \"../components/QuizFolderListItem\";\nimport LinkButton from \"../components/LinkButton\";\n\nimport { listFolders } from \"../actions/folderActions\";\n\nfunction QuizFolderSelectScreen() {\n  const history = useHistory();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const folderList = useSelector((state) => state.folderList);\n  const { loading, error, folders } = folderList;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else if (!folders) {\n      dispatch(listFolders());\n    }\n  }, [history, userInfo, folders, dispatch]);\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box\n        textAlign=\"center\"\n        pt={5}\n        pb=\"10rem\"\n        maxHeight=\"100vh\"\n        style={{ overflowY: \"scroll\" }}\n      >\n        <Typography component=\"h1\" variant=\"h4\">\n          フォルダを選択\n        </Typography>\n\n        {loading ? (\n          <CircularProgress />\n        ) : error ? (\n          <Alert severity=\"error\">{error}</Alert>\n        ) : (\n          folders && (\n            <List style={{ margin: \"0 auto\", width: \"80%\" }}>\n              {folders.map((folder) => (\n                <Link to={`/quizzes/folders/${folder.id}`} key={folder.id}>\n                  <QuizFolderListItem name={folder.name} />\n                </Link>\n              ))}\n            </List>\n          )\n        )}\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          mt={2}\n        >\n          <LinkButton\n            to=\"/editings/folders\"\n            color=\"inherit\"\n            name=\"クイズ編集\"\n            style={{\n              margin: \"2rem\",\n            }}\n          />\n\n          <LinkButton\n            to=\"/\"\n            color=\"inherit\"\n            name=\"戻る\"\n            style={{\n              margin: \"2rem\",\n            }}\n          />\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n\nexport default QuizFolderSelectScreen;\n",
    "import React from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction ActionButton({\n  name,\n  TypographyVariant,\n  color,\n  disabled,\n  onClick,\n  style,\n}) {\n  return (\n    <Button\n      variant=\"outlined\"\n      color={color}\n      onClick={onClick}\n      style={style}\n      disabled={disabled}\n    >\n      <Typography\n        component=\"span\"\n        variant={TypographyVariant}\n        style={{ overflowX: \"scroll\" }}\n      >\n        {name}\n      </Typography>\n    </Button>\n  );\n}\n\nexport default ActionButton;\n",
    "import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport LinkButton from \"./LinkButton\";\nimport ActionButton from \"./ActionButton\";\n\nfunction QuizSettings({ setIsStarted, questionCount, setQuestionCount }) {\n  const history = useHistory();\n\n  const [error, setError] = useState(\"\");\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const folderSet = useSelector((state) => state.folderSet);\n  const { folder } = folderSet;\n\n  const quizSet = useSelector((state) => state.quizSet);\n  const { quizList } = quizSet;\n\n  const hankakuToZenkaku = (str) => {\n    return str.replace(/[０-９]/g, (s) => {\n      return String.fromCharCode(s.charCodeAt(0) - 0xfee0);\n    });\n  };\n\n  const startQuiz = () => setIsStarted(true);\n\n  useEffect(() => {\n    if (!userInfo) history.push(\"/login\");\n  }, [history, userInfo]);\n\n  useEffect(() => {\n    if (quizList.length < 10) setQuestionCount(quizList.length);\n  }, [quizList, setQuestionCount]);\n\n  useEffect(() => {\n    if (quizList.length < 3) setError(\"3つ以上のクイズを登録してください\");\n    else if (questionCount > quizList.length || questionCount <= 0)\n      setError(`1から${quizList.length}までの数字を入力してください`);\n    else setError(\"\");\n  }, [questionCount, quizList]);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        textAlign=\"center\"\n        pt={5}\n        pb=\"10rem\"\n        maxHeight=\"100vh\"\n        style={{ overflowY: \"scroll\" }}\n      >\n        <Typography component=\"h1\" variant=\"h3\" paragraph>\n          クイズ設定\n        </Typography>\n        <Typography component=\"div\" variant=\"h4\" paragraph>\n          {folder.name}\n        </Typography>\n\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          height=\"10rem\"\n        >\n          <Typography component=\"div\" variant=\"h4\">\n            {error ? (\n              <Alert severity=\"error\">\n                <Typography component=\"p\" variant=\"h5\">\n                  {error}\n                </Typography>\n              </Alert>\n            ) : (\n              `出題数: ${questionCount}`\n            )}\n          </Typography>\n        </Box>\n\n        <Box my={3}>\n          <Grid container direction=\"row\" justify=\"center\" spacing={1}>\n            {[10, 20, 30, quizList.length].map((number, index) => (\n              <Grid item xs={3} key={index}>\n                <ActionButton\n                  name={number}\n                  TypographyVariant=\"h5\"\n                  color=\"primary\"\n                  onClick={(e) => setQuestionCount(Number(e.target.innerText))}\n                  style={{ padding: \"1rem 3rem\" }}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Box mr={2}>\n            <Typography component=\"span\" variant=\"h5\">\n              最大 {quizList.length} 問\n            </Typography>\n          </Box>\n          <TextField\n            type=\"number\"\n            label=\"数字を入れてくださいr\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(e) =>\n              setQuestionCount(Number(hankakuToZenkaku(e.target.value)))\n            }\n          />\n        </Box>\n\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          mt={10}\n        >\n          {error === \"3つ以上のクイズを登録してください\" ? (\n            <LinkButton\n              to={`/editings/folders/${folder.id}/quizzes/`}\n              color=\"inherit\"\n              name=\"クイズ編集\"\n              style={{\n                margin: \"2rem\",\n              }}\n            />\n          ) : (\n            <ActionButton\n              name=\"クイズ開始\"\n              TypographyVariant=\"h5\"\n              color=\"inherit\"\n              disabled={error ? true : false}\n              onClick={startQuiz}\n              style={{ padding: \"1rem 2rem\", margin: \"2rem\", width: \"14rem\" }}\n            />\n          )}\n\n          <LinkButton\n            to={`/quizzes/folders`}\n            color=\"inherit\"\n            name=\"戻る\"\n            style={{\n              margin: \"2rem\",\n            }}\n          />\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n\nexport default QuizSettings;\n",
    "import React, { useState, useEffect, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport axios from \"axios\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport ActionButton from \"../components/ActionButton\";\n\nfunction Quizzes({ setIsFinished, questionCount, setScore, setWrongQuizList }) {\n  const history = useHistory();\n\n  const [currentQuestionCount, setCurrentQuestionCount] = useState(0);\n  const [shuffledQuizList, setShuffledQuizList] = useState();\n  const [options, setOptions] = useState();\n  const [judge, setJudge] = useState(\"\");\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const folderSet = useSelector((state) => state.folderSet);\n  const { folder } = folderSet;\n\n  const quizSet = useSelector((state) => state.quizSet);\n  const { quizList } = quizSet;\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n\n  const correctSound = new Audio(\"/audios/correct.mp3\");\n  const wrongSound = new Audio(\"/audios/wrong.mp3\");\n\n  const answerWrong = async () => {\n    setJudge(\"wrong\");\n    wrongSound.play();\n    wrongSound.currentTime = 0;\n\n    setWrongQuizList((prev) => [...prev, currentQuestionCount]);\n\n    // last-answerを「不正解」にする\n    // mistakeに1をたす\n    await axios.put(\n      \"/api/quizzes/last_answer/update/\",\n      {\n        quizId: shuffledQuizList[currentQuestionCount].id,\n        lastAnswer: \"不正解\",\n      },\n      config\n    );\n  };\n\n  const answerCorrectly = async () => {\n    setJudge(\"correct\");\n    correctSound.play();\n    correctSound.currentTime = 0;\n\n    setScore((prev) => prev + 1);\n\n    // last-answerを「正解」にする\n    await axios.put(\n      \"/api/quizzes/last_answer/update/\",\n      {\n        quizId: shuffledQuizList[currentQuestionCount].id,\n        lastAnswer: \"正解\",\n      },\n      config\n    );\n  };\n\n  const checkAnswer = (e) => {\n    const selectedMeaning = e.target.innerText;\n    if (selectedMeaning === quizList[currentQuestionCount].meaning)\n      answerCorrectly();\n    else answerWrong();\n  };\n\n  const changeQuestion = () => {\n    if (currentQuestionCount < questionCount - 1)\n      setCurrentQuestionCount((prev) => prev + 1);\n    else setIsFinished(true);\n  };\n\n  const shuffle = useCallback((array) => {\n    for (let i = array.length - 1; i >= 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }, []);\n\n  const createWrongAnswerNumber = (\n    currentQuestionCount,\n    wrongAnswerNumber1 = \"\"\n  ) => {\n    const wrongAnswerNumber = Math.floor(Math.random() * quizList.length);\n    if (\n      wrongAnswerNumber === currentQuestionCount ||\n      wrongAnswerNumber === wrongAnswerNumber1\n    ) {\n      return createWrongAnswerNumber(currentQuestionCount, wrongAnswerNumber1);\n    }\n    return wrongAnswerNumber;\n  };\n\n  const changeOptions = () => {\n    if (shuffledQuizList) {\n      const correctAnswerIndex = currentQuestionCount + 1;\n      const wrongAnswerIndex1 = createWrongAnswerNumber(\n        currentQuestionCount + 1\n      );\n      const wrongAnswerIndex2 = createWrongAnswerNumber(\n        currentQuestionCount + 1,\n        wrongAnswerIndex1\n      );\n\n      setOptions(\n        shuffle([\n          shuffledQuizList[correctAnswerIndex],\n          shuffledQuizList[wrongAnswerIndex1],\n          shuffledQuizList[wrongAnswerIndex2],\n        ])\n      );\n    }\n  };\n\n  const passQuestion = (e) => {\n    e.preventDefault();\n    answerWrong();\n    setTimeout(() => {\n      setJudge(\"\");\n      changeQuestion();\n      changeOptions();\n    }, 1000);\n  };\n\n  const answerQuestion = (e) => {\n    e.preventDefault();\n    checkAnswer(e);\n    setTimeout(() => {\n      setJudge(\"\");\n      changeQuestion();\n      changeOptions();\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (!userInfo) history.push(\"/login\");\n    else if (quizList) setShuffledQuizList(shuffle(quizList));\n  }, [history, userInfo, shuffle, quizList]);\n\n  useEffect(() => {\n    if (shuffledQuizList) {\n      const correctAnswerIndex = currentQuestionCount;\n      const wrongAnswerIndex1 = createWrongAnswerNumber(currentQuestionCount);\n      const wrongAnswerIndex2 = createWrongAnswerNumber(\n        currentQuestionCount,\n        wrongAnswerIndex1\n      );\n\n      setOptions(\n        shuffle([\n          shuffledQuizList[correctAnswerIndex],\n          shuffledQuizList[wrongAnswerIndex1],\n          shuffledQuizList[wrongAnswerIndex2],\n        ])\n      );\n    }\n  }, [shuffledQuizList]);\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box pt={5} pb=\"10rem\" maxHeight=\"100vh\" style={{ overflowY: \"scroll\" }}>\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"space-around\"\n          my={3}\n        >\n          <Typography component=\"h2\" variant=\"h4\">\n            {folder.name}\n          </Typography>\n          <Typography component=\"h2\" variant=\"h4\">\n            {currentQuestionCount + 1} / {questionCount} 問\n          </Typography>\n        </Box>\n\n        <Box textAlign=\"center\">\n          <Typography\n            component=\"h1\"\n            variant=\"h1\"\n            style={{ width: \"100%\", overflowX: \"scroll\" }}\n          >\n            {shuffledQuizList && shuffledQuizList[currentQuestionCount].word}\n          </Typography>\n        </Box>\n\n        <Box textAlign=\"center\" mt={1} height=\"3rem\">\n          {judge === \"correct\" ? (\n            <Typography component=\"span\" variant=\"h3\" color=\"primary\">\n              <Box color=\"#0e918c\">正解!</Box>\n            </Typography>\n          ) : judge === \"wrong\" ? (\n            <Typography component=\"span\" variant=\"h3\" color=\"secondary\">\n              残念...\n            </Typography>\n          ) : (\n            \" \"\n          )}\n        </Box>\n\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" my={10}>\n          {options &&\n            options.map((option) => (\n              <ActionButton\n                key={option.id}\n                name={option.meaning}\n                TypographyVariant=\"h4\"\n                color=\"primary\"\n                disabled={judge ? true : false}\n                onClick={answerQuestion}\n                style={{\n                  padding: \"1rem 2rem\",\n                  margin: \"0 2rem\",\n                  width: \"30%\",\n                }}\n              />\n            ))}\n        </Box>\n\n        <Box textAlign=\"center\">\n          <ActionButton\n            name=\"Pass\"\n            TypographyVariant=\"h4\"\n            color=\"default\"\n            disabled={judge ? true : false}\n            onClick={passQuestion}\n            style={{ padding: \"1rem 2rem\", width: \"14rem\" }}\n          />\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Quizzes;\n",
    "import React from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nfunction QuizResultListItem({ index, word, meaning, mistake }) {\n  return (\n    <ListItem divider>\n      <Box mr={2}>\n        <ListItemText\n          primary={index}\n          primaryTypographyProps={{ component: \"span\", variant: \"h4\" }}\n        />\n      </Box>\n\n      <Box width=\"30%\" px={3} style={{ overflowX: \"hidden\" }}>\n        <ListItemText\n          primary={word}\n          primaryTypographyProps={{ component: \"span\", variant: \"h4\" }}\n        />\n      </Box>\n\n      <Box width=\"30%\" px={3} style={{ overflowX: \"hidden\" }}>\n        <ListItemText\n          primary={meaning}\n          primaryTypographyProps={{ component: \"span\", variant: \"h4\" }}\n        />\n      </Box>\n\n      <Box width=\"35%\" px={3} style={{ overflowX: \"hidden\" }}>\n        <ListItemText\n          primary={typeof mistake === \"number\" ? mistake + 1 : mistake}\n          primaryTypographyProps={{ component: \"span\", variant: \"h4\" }}\n        />\n      </Box>\n    </ListItem>\n  );\n}\n\nexport default QuizResultListItem;\n",
    "import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport QuizResultListItem from \"./QuizResultListItem\";\nimport LinkButton from \"./LinkButton\";\nimport ActionButton from \"./ActionButton\";\n\nfunction QuizResults({\n  questionCount,\n  score,\n  wrongQuizList,\n  setIsStarted,\n  setIsFinished,\n  setWrongQuizList,\n  setScore,\n}) {\n  const history = useHistory();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const folderSet = useSelector((state) => state.folderSet);\n  const { folder } = folderSet;\n\n  const quizSet = useSelector((state) => state.quizSet);\n  const { quizList } = quizSet;\n\n  const retry = () => {\n    setIsStarted(false);\n    setIsFinished(false);\n    setWrongQuizList([]);\n    setScore(0);\n  };\n\n  useEffect(() => {\n    if (!userInfo) history.push(\"/login\");\n  }, [history, userInfo]);\n\n  return (\n    <Container>\n      <Box\n        textAlign=\"center\"\n        pt={5}\n        pb=\"10rem\"\n        maxHeight=\"100vh\"\n        mb=\"10vh\"\n        style={{ overflowY: \"scroll\" }}\n      >\n        <Typography component=\"h1\" variant=\"h2\" paragraph>\n          クイズ結果\n        </Typography>\n\n        <Typography component=\"h1\" variant=\"h3\" paragraph>\n          {folder.name}\n        </Typography>\n\n        <Typography component=\"h2\" variant=\"h3\" paragraph>\n          {score} / {questionCount} 問正解！\n        </Typography>\n\n        <Box pt={10} mt={5} maxHeight=\"50vh\" style={{ overflowY: \"scroll\" }}>\n          {wrongQuizList.length > 0 && (\n            <QuizResultListItem\n              index=\"#\"\n              word=\"単語\"\n              meaning=\"意味\"\n              mistake=\"間違えた回数\"\n            />\n          )}\n\n          {wrongQuizList.map((questionCount, index) => (\n            <QuizResultListItem\n              index={index + 1}\n              word={quizList[questionCount].word}\n              meaning={quizList[questionCount].meaning}\n              mistake={quizList[questionCount].mistake}\n              key={quizList[questionCount].id}\n            />\n          ))}\n        </Box>\n\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          mt={10}\n        >\n          <LinkButton\n            to={`/editings/folders`}\n            color=\"inherit\"\n            name=\"クイズ編集\"\n            style={{\n              margin: \"2rem\",\n            }}\n          />\n\n          <ActionButton\n            name=\"リトライ\"\n            TypographyVariant=\"h5\"\n            color=\"inherit\"\n            onClick={retry}\n            style={{ padding: \"1rem 2rem\", margin: \"2rem\", width: \"14rem\" }}\n          />\n\n          <LinkButton\n            to=\"/\"\n            color=\"inherit\"\n            name=\"トップ\"\n            style={{\n              margin: \"2rem\",\n            }}\n          />\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n\nexport default QuizResults;\n",
    "import axios from \"axios\";\n\nimport {\n  ALL_QUIZ_REQUEST,\n  ALL_QUIZ_SUCCESS,\n  ALL_QUIZ_FAIL,\n  ALL_QUIZ_RESET,\n  ACTIVE_QUIZ_SET_REQUEST,\n  ACTIVE_QUIZ_SET_SUCCESS,\n  ACTIVE_QUIZ_SET_FAIL,\n  ACTIVE_QUIZ_RESET,\n  QUIZ_DELETE_REQUEST,\n  QUIZ_DELETE_SUCCESS,\n  QUIZ_DELETE_FAIL,\n  QUIZ_DELETE_RESET,\n} from \"../consts/quizConsts\";\n\nexport const getAllQuizzes = (folderId = \"\") => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ALL_QUIZ_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    let quizList;\n    // フォルダを指定した場合\n    if (folderId) {\n      const { data } = await axios.get(\n        `/api/quizzes/folder/${folderId}/`,\n        config\n      );\n\n      quizList = data;\n\n      // フォルダを指定しない場合\n    } else {\n      const { data } = await axios.get(\"/api/quizzes/\", config);\n\n      quizList = data;\n    }\n\n    dispatch({ type: ALL_QUIZ_SUCCESS, payload: quizList });\n  } catch (error) {\n    dispatch({\n      type: ALL_QUIZ_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const setQuizzes = (folderId = \"\") => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ACTIVE_QUIZ_SET_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    let quizList;\n    // フォルダを指定した場合\n    if (folderId) {\n      const { data } = await axios.get(\n        `/api/quizzes/folder/active/${folderId}/`,\n        config\n      );\n\n      quizList = data;\n\n      // フォルダを指定しない場合\n    } else {\n      const { data } = await axios.get(\"/api/quizzes/active/\", config);\n\n      quizList = data;\n    }\n\n    dispatch({ type: ACTIVE_QUIZ_SET_SUCCESS, payload: quizList });\n  } catch (error) {\n    dispatch({\n      type: ACTIVE_QUIZ_SET_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n\nexport const deleteQuiz = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: QUIZ_DELETE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.delete(`/api/quizzes/delete/${id}/`, config);\n\n    dispatch({ type: QUIZ_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: QUIZ_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.detail\n          ? error.response.data.detail\n          : error.message,\n    });\n  }\n};\n",
    "import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport QuizSettings from \"../components/QuizSettings\";\nimport Quizzes from \"../components/Quizzes\";\nimport QuizResults from \"../components/QuizResults\";\n\nimport { setFolder } from \"../actions/folderActions\";\nimport { setQuizzes } from \"../actions/quizActions\";\n\nfunction QuizPageScreen() {\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [isStarted, setIsStarted] = useState(false);\n  const [isFinished, setIsFinished] = useState(false);\n  const [questionCount, setQuestionCount] = useState(10);\n  const [score, setScore] = useState(0);\n  const [wrongQuizList, setWrongQuizList] = useState([]);\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const folderSet = useSelector((state) => state.folderSet);\n  const { loading: folderLoading, error: folderError, folder } = folderSet;\n\n  const quizSet = useSelector((state) => state.quizSet);\n  const { loading: quizLoading, error: quizError, quizList } = quizSet;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      dispatch(setFolder(id));\n      dispatch(setQuizzes(id));\n    }\n  }, [history, userInfo, dispatch, id]);\n\n  return (\n    <Box>\n      {folderLoading && quizLoading ? (\n        <CircularProgress />\n      ) : folderError ? (\n        <Alert severity=\"error\">{folderError}</Alert>\n      ) : quizError ? (\n        <Alert severity=\"error\">{quizError}</Alert>\n      ) : (\n        quizList &&\n        folder && (\n          <Box>\n            {isStarted ? (\n              isFinished ? (\n                <QuizResults\n                  questionCount={questionCount}\n                  score={score}\n                  wrongQuizList={wrongQuizList}\n                  setIsFinished={setIsFinished}\n                  setIsStarted={setIsStarted}\n                  setWrongQuizList={setWrongQuizList}\n                  setScore={setScore}\n                />\n              ) : (\n                <Quizzes\n                  setIsFinished={setIsFinished}\n                  questionCount={questionCount}\n                  setScore={setScore}\n                  setWrongQuizList={setWrongQuizList}\n                />\n              )\n            ) : (\n              <QuizSettings\n                setIsStarted={setIsStarted}\n                questionCount={questionCount}\n                setQuestionCount={setQuestionCount}\n              />\n            )}\n          </Box>\n        )\n      )}\n    </Box>\n  );\n}\n\nexport default QuizPageScreen;\n",
    "import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport { deleteFolder } from \"../actions/folderActions\";\n\nimport { FOLDER_DELETE_RESET } from \"../consts/folderConsts\";\n\nfunction FolderDeleteDialog({ name, folderId }) {\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\n  const [backdropIsOpen, setBackdropIsOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const folderDelete = useSelector((state) => state.folderDelete);\n  const { success } = folderDelete;\n\n  const dispatch = useDispatch();\n\n  const openDialog = () => setDialogIsOpen(true);\n  const closeDialog = () => setDialogIsOpen(false);\n\n  const deleteHandler = async () => {\n    setLoading(true);\n    setBackdropIsOpen(true);\n    dispatch(deleteFolder(folderId));\n  };\n\n  const cancelHandler = () => {\n    setBackdropIsOpen(false);\n    setLoading(false);\n    setDialogIsOpen(false);\n  };\n\n  useEffect(() => {\n    if (success) {\n      dispatch({ type: FOLDER_DELETE_RESET });\n      setDialogIsOpen(false);\n      setLoading(false);\n    }\n  }, [dispatch, success]);\n\n  return (\n    <Box color=\"inherit\">\n      <Tooltip title=\"削除\">\n        <IconButton onClick={openDialog}>\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n      {loading ? (\n        <Backdrop open={backdropIsOpen} style={{ zIndex: 1 }}>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <Box textAlign=\"center\">\n              <CircularProgress\n                style={{ backgroundColor: \"transparent\", color: \"#fff\" }}\n              />\n            </Box>\n\n            <Button\n              onClick={cancelHandler}\n              variant=\"contained\"\n              style={{\n                color: \"#f50057\",\n                margin: \"5rem auto 0\",\n                padding: \"1rem 2rem\",\n              }}\n            >\n              <Typography component=\"span\" variant=\"h5\">\n                キャンセル\n              </Typography>\n            </Button>\n          </Box>\n        </Backdrop>\n      ) : (\n        <Dialog open={dialogIsOpen} onClose={closeDialog}>\n          <DialogTitle style={{ color: \"#f50057\" }}>\n            本当に削除しますか？\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              削除されたデータは二度と戻りません。\n              <br />\n              <br />\n              {\"  \"}フォルダ名： {name}\n              <br />\n              <br />\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={closeDialog} color=\"primary\">\n              キャンセル\n            </Button>\n            <Button onClick={deleteHandler} color=\"primary\">\n              削除\n            </Button>\n          </DialogActions>{\" \"}\n        </Dialog>\n      )}\n    </Box>\n  );\n}\n\nexport default FolderDeleteDialog;\n",
    "import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\n\nimport FolderDeleteDialog from \"./FolderDeleteDialog\";\n\nfunction EditingFolderListItem({ folderId, name }) {\n  return (\n    <ListItem divider style={{ position: \"relative\" }}>\n      <Box width=\"90%\" style={{ overflowX: \"hidden\" }}>\n        <Link to={`/editings/folders/${folderId}/quizzes`}>\n          <Box display=\"flex\" alignItems=\"center\">\n            <ListItemIcon>\n              <FolderIcon />\n            </ListItemIcon>\n            <Box width=\"90%\" style={{ overflowX: \"hidden\" }}>\n              <ListItemText\n                primary={name}\n                primaryTypographyProps={{ component: \"span\", variant: \"h4\" }}\n              />\n            </Box>\n          </Box>\n        </Link>\n      </Box>\n\n      <ListItemIcon>\n        <Tooltip title=\"編集\">\n          <Link to={`/editings/folders/${folderId}/edit`}>\n            <IconButton>\n              <EditIcon />\n            </IconButton>\n          </Link>\n        </Tooltip>\n      </ListItemIcon>\n\n      <ListItemIcon>\n        <FolderDeleteDialog name={name} folderId={folderId} />\n      </ListItemIcon>\n    </ListItem>\n  );\n}\n\nexport default EditingFolderListItem;\n",
    "import React, { useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport EditingFolderListItem from \"../components/EditingFolderListItem\";\nimport LinkButton from \"../components/LinkButton\";\n\nimport { listFolders } from \"../actions/folderActions\";\n\nfunction EditingFolderSelectScreen() {\n  const history = useHistory();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const folderList = useSelector((state) => state.folderList);\n  const { loading, error, folders } = folderList;\n\n  const folderDelete = useSelector((state) => state.folderDelete);\n  const { success } = folderDelete;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else if (!folders) {\n      dispatch(listFolders());\n    }\n  }, [history, userInfo, folders, dispatch]);\n\n  useEffect(() => {\n    if (success) {\n      dispatch(listFolders());\n    }\n  }, [dispatch, success]);\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box\n        textAlign=\"center\"\n        pt={5}\n        pb=\"10rem\"\n        maxHeight=\"100vh\"\n        style={{ overflowY: \"scroll\" }}\n      >\n        <Typography component=\"h1\" variant=\"h4\">\n          編集するフォルダを選択\n        </Typography>\n\n        {loading ? (\n          <CircularProgress />\n        ) : error ? (\n          <Alert severity=\"error\">{error}</Alert>\n        ) : (\n          folders && (\n            <List\n              style={{\n                maxHeight: \"50vh\",\n                width: \"80%\",\n                margin: \"0 auto\",\n                overflowY: \"scroll\",\n              }}\n            >\n              {folders.map((folder) => (\n                <EditingFolderListItem\n                  folderId={folder.id}\n                  name={folder.name}\n                  key={folder.id}\n                />\n              ))}\n            </List>\n          )\n        )}\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          mt={2}\n        >\n          <LinkButton\n            to=\"/editings/folders/create\"\n            color=\"inherit\"\n            name=\"フォルダ作成\"\n            style={{\n              margin: \"2rem\",\n            }}\n          />\n\n          <LinkButton\n            to=\"/\"\n            color=\"inherit\"\n            name=\"戻る\"\n            style={{\n              margin: \"2rem\",\n            }}\n          />\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n\nexport default EditingFolderSelectScreen;\n",
    "import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport axios from \"axios\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport LinkButton from \"../components/LinkButton\";\n\nimport { listFolders, setFolder } from \"../actions/folderActions\";\n\nfunction FolderEditScreen() {\n  const history = useHistory();\n  const { folderId } = useParams();\n  const [name, setName] = useState(\"\");\n  const [updating, setUpdating] = useState(false);\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const folderSet = useSelector((state) => state.folderSet);\n  const { loading, error, folder } = folderSet;\n\n  const dispatch = useDispatch();\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n\n  const updateFolderHandler = async (e) => {\n    e.preventDefault();\n    setUpdating(true);\n    await axios.put(\n      \"/api/folders/update/\",\n      { name: name, folderId: folderId },\n      config\n    );\n    dispatch(listFolders(folderId));\n    setUpdating(false);\n    history.push(\"/editings/folders\");\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      dispatch(setFolder(folderId));\n    }\n  }, [dispatch, history, userInfo, folderId]);\n\n  useEffect(() => {\n    if (folder) {\n      setName(folder.name);\n    }\n  }, [folder]);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        textAlign=\"center\"\n        pt={5}\n        pb=\"10rem\"\n        maxHeight=\"100vh\"\n        style={{ overflowY: \"scroll\" }}\n      >\n        <Typography component=\"h1\" variant=\"h2\">\n          クイズ編集\n        </Typography>\n\n        {loading || updating ? (\n          <CircularProgress />\n        ) : error ? (\n          <Alert severity=\"error\">{error}</Alert>\n        ) : (\n          folder && (\n            <form onSubmit={updateFolderHandler} className=\"login__form\">\n              <TextField\n                required\n                label=\"フォルダ名\"\n                fullWidth\n                margin=\"normal\"\n                autoFocus\n                variant=\"outlined\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n\n              <Box mt={10} display=\"flex\" justifyContent=\"center\">\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  style={{\n                    padding: \"1rem 2rem\",\n                    width: \"14rem\",\n                    margin: \"0 2rem\",\n                  }}\n                >\n                  <Typography component=\"span\" variant=\"h5\">\n                    変更\n                  </Typography>\n                </Button>\n\n                <LinkButton\n                  to=\"/editings/folders\"\n                  color=\"inherit\"\n                  name=\"キャンセル\"\n                  style={{ margin: \"0 2rem\" }}\n                />\n              </Box>\n            </form>\n          )\n        )}\n      </Box>\n    </Container>\n  );\n}\n\nexport default FolderEditScreen;\n",
    "import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport axios from \"axios\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport LinkButton from \"../components/LinkButton\";\n\nimport { listFolders } from \"../actions/folderActions\";\n\nfunction FolderCreateScreen() {\n  const history = useHistory();\n  const [name, setName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const dispatch = useDispatch();\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n\n  const createFolderHandler = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    await axios.post(\"/api/folders/create/\", { name: name }, config);\n    dispatch(listFolders());\n    setLoading(false);\n    history.push(\"/editings/folders\");\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, userInfo]);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        textAlign=\"center\"\n        pt={5}\n        pb=\"10rem\"\n        maxHeight=\"100vh\"\n        style={{ overflowY: \"scroll\" }}\n      >\n        <Typography component=\"h1\" variant=\"h2\">\n          フォルダ作成\n        </Typography>\n\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <form onSubmit={createFolderHandler} className=\"login__form\">\n            <TextField\n              required\n              label=\"フォルダ名\"\n              fullWidth\n              margin=\"normal\"\n              autoFocus\n              variant=\"outlined\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n\n            <Box mt={10} display=\"flex\" justifyContent=\"center\">\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                variant=\"contained\"\n                style={{\n                  padding: \"1rem 2rem\",\n                  width: \"14rem\",\n                  margin: \"0 2rem\",\n                }}\n              >\n                <Typography component=\"span\" variant=\"h5\">\n                  作成\n                </Typography>\n              </Button>\n\n              <LinkButton\n                to=\"/editings/folders\"\n                color=\"inherit\"\n                name=\"キャンセル\"\n                style={{ margin: \"0 2rem\" }}\n              />\n            </Box>\n          </form>\n        )}\n      </Box>\n    </Container>\n  );\n}\n\nexport default FolderCreateScreen;\n",
    "import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport { getAllQuizzes, deleteQuiz } from \"../actions/quizActions\";\n\nimport { QUIZ_DELETE_RESET } from \"../consts/quizConsts\";\n\nfunction QuizDeleteDialog({ word, meaning, quizId }) {\n  const { folderId } = useParams();\n\n  const [dialogIsOpen, setDialogIsOpen] = useState(false);\n  const [backdropIsOpen, setBackdropIsOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const quizDelete = useSelector((state) => state.quizDelete);\n  const { success } = quizDelete;\n\n  const dispatch = useDispatch();\n\n  const openDialog = () => setDialogIsOpen(true);\n  const closeDialog = () => setDialogIsOpen(false);\n\n  const deleteHandler = async () => {\n    setLoading(true);\n    setBackdropIsOpen(true);\n    dispatch(deleteQuiz(quizId));\n  };\n\n  const cancelHandler = () => {\n    setBackdropIsOpen(false);\n    setLoading(false);\n    setDialogIsOpen(false);\n  };\n\n  useEffect(() => {\n    if (success) {\n      dispatch({ type: QUIZ_DELETE_RESET });\n      setDialogIsOpen(false);\n      setLoading(false);\n    }\n  }, [dispatch, success]);\n\n  return (\n    <Box color=\"inherit\">\n      <Tooltip title=\"削除\">\n        <IconButton onClick={openDialog}>\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n      {loading ? (\n        <Backdrop open={backdropIsOpen} style={{ zIndex: 1 }}>\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n            <Box textAlign=\"center\">\n              <CircularProgress\n                style={{ backgroundColor: \"transparent\", color: \"#fff\" }}\n              />\n            </Box>\n\n            <Button\n              onClick={cancelHandler}\n              variant=\"contained\"\n              style={{\n                color: \"#f50057\",\n                margin: \"5rem auto 0\",\n                padding: \"1rem 2rem\",\n              }}\n            >\n              <Typography component=\"span\" variant=\"h5\">\n                キャンセル\n              </Typography>\n            </Button>\n          </Box>\n        </Backdrop>\n      ) : (\n        <Dialog open={dialogIsOpen} onClose={closeDialog}>\n          <DialogTitle style={{ color: \"#f50057\" }}>\n            本当に削除しますか？\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              削除されたデータは二度と戻りません。\n              <br />\n              <br />\n              {\"  \"}単語： {word}\n              <br />\n              {\"  \"}意味： {meaning}\n              <br />\n              <br />\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={closeDialog} color=\"primary\">\n              キャンセル\n            </Button>\n            <Button onClick={deleteHandler} color=\"primary\">\n              削除\n            </Button>\n          </DialogActions>{\" \"}\n        </Dialog>\n      )}\n    </Box>\n  );\n}\n\nexport default QuizDeleteDialog;\n",
    "import React, { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nimport axios from \"axios\";\n\nimport Box from \"@material-ui/core/Box\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nimport QuizDeleteDialog from \"./QuizDeleteDialog\";\n\nfunction QuizListItem({ word, meaning, quizId, isActive, index }) {\n  const { folderId } = useParams();\n  const [isChecked, setIsChecked] = useState(isActive);\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n\n  const setQuizHandler = async () => {\n    const {\n      data: { is_active },\n    } = await axios.put(\"/api/quizzes/set/\", { quizId: quizId }, config);\n    setIsChecked(is_active);\n  };\n\n  return (\n    <ListItem divider>\n      <Box mr={2}>\n        <ListItemText\n          primary={index}\n          primaryTypographyProps={{ component: \"span\", variant: \"h5\" }}\n        />\n      </Box>\n\n      <Box width=\"30%\" px={3} style={{ overflowX: \"hidden\" }}>\n        <ListItemText\n          primary={word}\n          primaryTypographyProps={{ component: \"span\", variant: \"h4\" }}\n        />\n      </Box>\n      <Box width=\"50%\" px={3} style={{ overflowX: \"hidden\" }}>\n        <ListItemText\n          primary={meaning}\n          primaryTypographyProps={{ component: \"span\", variant: \"h4\" }}\n        />\n      </Box>\n\n      {/* checkboxでis_activeを切り替え */}\n      <Tooltip title={isChecked ? \"出題する\" : \"出題しない\"}>\n        <Checkbox\n          checked={isChecked}\n          onChange={setQuizHandler}\n          color=\"primary\"\n        />\n      </Tooltip>\n\n      <ListItemIcon>\n        <Tooltip title=\"編集\">\n          <Link to={`/editings/folders/${folderId}/quizzes/${quizId}/edit`}>\n            <IconButton>\n              <EditIcon />\n            </IconButton>\n          </Link>\n        </Tooltip>\n      </ListItemIcon>\n\n      <ListItemIcon>\n        <QuizDeleteDialog word={word} meaning={meaning} quizId={quizId} />\n      </ListItemIcon>\n    </ListItem>\n  );\n}\n\nexport default QuizListItem;\n",
    "import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport QuizListItem from \"../components/QuizListItem\";\nimport LinkButton from \"../components/LinkButton\";\n\nimport { setFolder } from \"../actions/folderActions\";\nimport { getAllQuizzes } from \"../actions/quizActions\";\n\nfunction QuizListScreen() {\n  const history = useHistory();\n  const { folderId } = useParams();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const folderSet = useSelector((state) => state.folderSet);\n  const { loading: folderLoading, error: folderError, folder } = folderSet;\n\n  const allQuizzes = useSelector((state) => state.allQuizzes);\n  const { loading: quizLoading, error: quizError, quizList } = allQuizzes;\n\n  const quizDelete = useSelector((state) => state.quizDelete);\n  const { success } = quizDelete;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      dispatch(setFolder(folderId));\n      dispatch(getAllQuizzes(folderId));\n    }\n  }, [history, userInfo, dispatch, folderId]);\n\n  useEffect(() => {\n    if (success) {\n      dispatch(getAllQuizzes(folderId));\n    }\n  }, [dispatch, success, folderId]);\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box\n        textAlign=\"center\"\n        pt={5}\n        pb=\"10rem\"\n        maxHeight=\"100vh\"\n        style={{ overflowY: \"scroll\" }}\n      >\n        <Box>\n          <Typography component=\"h1\" variant=\"h4\" paragraph>\n            クイズ一覧\n          </Typography>\n\n          {folderLoading && quizLoading ? (\n            <CircularProgress />\n          ) : folderError ? (\n            <Alert severity=\"error\">{folderError}</Alert>\n          ) : quizError ? (\n            <Alert severity=\"error\">{quizError}</Alert>\n          ) : (\n            quizList &&\n            folder && (\n              <Box>\n                <Typography component=\"h1\" variant=\"h4\" paragraph>\n                  {folder.name}\n                </Typography>\n                <Typography component=\"h1\" variant=\"h4\" paragraph>\n                  {quizList.length}問\n                </Typography>\n                <List\n                  style={{\n                    maxHeight: \"50vh\",\n                    width: \"100%\",\n                    margin: \"0 auto\",\n                    overflowY: \"scroll\",\n                  }}\n                >\n                  {quizList.map((quiz, index) => (\n                    <QuizListItem\n                      key={quiz.id}\n                      word={quiz.word}\n                      meaning={quiz.meaning}\n                      quizId={quiz.id}\n                      isActive={quiz.is_active}\n                      index={index + 1}\n                    />\n                  ))}\n                </List>\n              </Box>\n            )\n          )}\n        </Box>\n        <Box\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          mt={2}\n        >\n          <LinkButton\n            to={`/editings/folders/${folderId}/create`}\n            color=\"inherit\"\n            name=\"クイズ作成\"\n            style={{\n              margin: \"2rem\",\n            }}\n          />\n\n          <LinkButton\n            to={`/editings/folders`}\n            color=\"inherit\"\n            name=\"戻る\"\n            style={{\n              margin: \"2rem\",\n            }}\n          />\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n\nexport default QuizListScreen;\n",
    "import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport axios from \"axios\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport LinkButton from \"../components/LinkButton\";\n\nimport { getAllQuizzes } from \"../actions/quizActions\";\n\nfunction QuizEditScreen() {\n  const history = useHistory();\n  const { folderId, quizId } = useParams();\n  const [word, setWord] = useState(\"\");\n  const [meaning, setMeaning] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const dispatch = useDispatch();\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n\n  const updateQuizHandler = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    await axios.put(\n      \"/api/quizzes/update/\",\n      { word: word, meaning: meaning, quizId: quizId },\n      config\n    );\n    dispatch(getAllQuizzes(folderId));\n    setLoading(false);\n    history.push(`/editings/folders/${folderId}/quizzes`);\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      setLoading(true);\n\n      async function fetchQuiz() {\n        const { data } = await axios.get(`/api/quizzes/${quizId}/`, config);\n        setWord(data.word);\n        setMeaning(data.meaning);\n      }\n\n      fetchQuiz();\n\n      setLoading(false);\n    }\n  }, [history, userInfo, quizId]);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        textAlign=\"center\"\n        pt={5}\n        pb=\"10rem\"\n        maxHeight=\"100vh\"\n        style={{ overflowY: \"scroll\" }}\n      >\n        <Typography component=\"h1\" variant=\"h2\">\n          クイズ編集\n        </Typography>\n\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <form onSubmit={updateQuizHandler} className=\"login__form\">\n            <TextField\n              required\n              label=\"単語\"\n              fullWidth\n              margin=\"normal\"\n              autoFocus\n              variant=\"outlined\"\n              value={word}\n              onChange={(e) => setWord(e.target.value)}\n            />\n\n            <TextField\n              required\n              label=\"意味\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              value={meaning}\n              onChange={(e) => setMeaning(e.target.value)}\n            />\n\n            <Box mt={10} display=\"flex\" justifyContent=\"center\">\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                variant=\"contained\"\n                style={{\n                  padding: \"1rem 2rem\",\n                  width: \"14rem\",\n                  margin: \"0 2rem\",\n                }}\n              >\n                <Typography component=\"span\" variant=\"h5\">\n                  変更\n                </Typography>\n              </Button>\n\n              <LinkButton\n                to={`/editings/folders/${folderId}/quizzes`}\n                color=\"inherit\"\n                name=\"キャンセル\"\n                style={{ margin: \"0 2rem\" }}\n              />\n            </Box>\n          </form>\n        )}\n      </Box>\n    </Container>\n  );\n}\n\nexport default QuizEditScreen;\n",
    "import React, { useState, useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport axios from \"axios\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport LinkButton from \"../components/LinkButton\";\n\nfunction QuizCreateScreen() {\n  const history = useHistory();\n  const { folderId } = useParams();\n  const [word, setWord] = useState(\"\");\n  const [meaning, setMeaning] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n\n  const createQuizHandler = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    await axios.post(\n      \"/api/quizzes/create/\",\n      { word: word, meaning: meaning, folderId: folderId },\n      config\n    );\n    setLoading(false);\n    history.push(`/editings/folders/${folderId}/quizzes`);\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n  }, [history, userInfo]);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        textAlign=\"center\"\n        pt={5}\n        pb=\"10rem\"\n        maxHeight=\"100vh\"\n        style={{ overflowY: \"scroll\" }}\n      >\n        <Typography component=\"h1\" variant=\"h2\">\n          クイズ作成\n        </Typography>\n\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <form onSubmit={createQuizHandler} className=\"login__form\">\n            <TextField\n              required\n              label=\"単語\"\n              fullWidth\n              margin=\"normal\"\n              autoFocus\n              variant=\"outlined\"\n              value={word}\n              onChange={(e) => setWord(e.target.value)}\n            />\n\n            <TextField\n              required\n              label=\"意味\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              value={meaning}\n              onChange={(e) => setMeaning(e.target.value)}\n            />\n\n            <Box mt={10} display=\"flex\" justifyContent=\"center\">\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                variant=\"contained\"\n                style={{\n                  padding: \"1rem 2rem\",\n                  width: \"14rem\",\n                  margin: \"0 2rem\",\n                }}\n              >\n                <Typography component=\"span\" variant=\"h5\">\n                  作成\n                </Typography>\n              </Button>\n\n              <LinkButton\n                to={`/editings/folders/${folderId}/quizzes`}\n                color=\"inherit\"\n                name=\"キャンセル\"\n                style={{ margin: \"0 2rem\" }}\n              />\n            </Box>\n          </form>\n        )}\n      </Box>\n    </Container>\n  );\n}\n\nexport default QuizCreateScreen;\n",
    "import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport Header from \"../components/Header\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport RegisterScreen from \"../screens/RegisterScreen\";\nimport ProfileSettingsScreen from \"../screens/ProfileSettingsScreen\";\nimport LoginInfoEditScreen from \"../screens/LoginInfoEditScreen\";\nimport UserInfoEditScreen from \"../screens/UserInfoEditScreen\";\nimport QuizFolderSelectScreen from \"../screens/QuizFolderSelectScreen\";\nimport QuizPageScreen from \"../screens/QuizPageScreen\";\nimport EditingFolderSelectScreen from \"../screens/EditingFolderSelectScreen\";\nimport FolderEditScreen from \"../screens/FolderEditScreen\";\nimport FolderCreateScreen from \"../screens/FolderCreateScreen\";\nimport QuizListScreen from \"../screens/QuizListScreen\";\nimport QuizEditScreen from \"../screens/QuizEditScreen\";\nimport QuizCreateScreen from \"../screens/QuizCreateScreen\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: ['\"PT Sans\"', \"Sans MS\", '\"Kosugi Maru\"', \"sans-serif\"].join(\n      \",\"\n    ),\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <CssBaseline />\n        <Header />\n\n        <Route exact path=\"/\" component={HomeScreen} />\n\n        <Route exact path=\"/login\" component={LoginScreen} />\n\n        <Route exact path=\"/register\" component={RegisterScreen} />\n\n        <Route exact path=\"/profile\" component={ProfileSettingsScreen} />\n\n        <Route\n          exact\n          path=\"/profile/logininfo\"\n          component={LoginInfoEditScreen}\n        />\n\n        <Route exact path=\"/profile/userinfo\" component={UserInfoEditScreen} />\n\n        <Route\n          exact\n          path=\"/quizzes/folders\"\n          component={QuizFolderSelectScreen}\n        />\n\n        <Route exact path=\"/quizzes/folders/:id\" component={QuizPageScreen} />\n\n        <Route\n          exact\n          path=\"/editings/folders\"\n          component={EditingFolderSelectScreen}\n        />\n\n        <Route\n          exact\n          path=\"/editings/folders/create\"\n          component={FolderCreateScreen}\n        />\n\n        <Route\n          exact\n          path=\"/editings/folders/:folderId/edit\"\n          component={FolderEditScreen}\n        />\n\n        <Route\n          exact\n          path=\"/editings/folders/:folderId/quizzes\"\n          component={QuizListScreen}\n        />\n\n        <Route\n          exact\n          path=\"/editings/folders/:folderId/create\"\n          component={QuizCreateScreen}\n        />\n\n        <Route\n          exact\n          path=\"/editings/folders/:folderId/quizzes/:quizId/edit\"\n          component={QuizEditScreen}\n        />\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n",
    "import { combineReducers } from \"redux\";\n\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userDetailsUpdateReducer,\n} from \"./userReducers\";\nimport {\n  folderListReducer,\n  folderSetReducer,\n  folderDeleteReducer,\n} from \"./folderReducers\";\nimport {\n  allQuizReducer,\n  activeQuizSetReducer,\n  quizDeleteReducer,\n} from \"./quizReducers\";\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userDetails: userDetailsReducer,\n  userDetailsUpdate: userDetailsUpdateReducer,\n  userRegister: userRegisterReducer,\n  folderList: folderListReducer,\n  folderSet: folderSetReducer,\n  folderDelete: folderDeleteReducer,\n  allQuizzes: allQuizReducer,\n  quizSet: activeQuizSetReducer,\n  quizDelete: quizDeleteReducer,\n});\n\nexport default reducer;\n",
    "import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_RESET,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_DETAILS_UPDATE_REQUEST,\n  USER_DETAILS_UPDATE_SUCCESS,\n  USER_DETAILS_UPDATE_FAIL,\n  USER_DETAILS_UPDATE_RESET,\n} from \"../consts/userConsts\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n\n    case USER_LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, success: true, user: action.payload };\n\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n\n    case USER_REGISTER_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const userDetailsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { loading: true };\n\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload };\n\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n\n    case USER_DETAILS_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const userDetailsUpdateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DETAILS_UPDATE_REQUEST:\n      return { loading: true };\n\n    case USER_DETAILS_UPDATE_SUCCESS:\n      return { loading: false, success: true, userProfile: action.payload };\n\n    case USER_DETAILS_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n\n    case USER_DETAILS_UPDATE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n",
    "import {\n  FOLDER_LIST_REQUEST,\n  FOLDER_LIST_SUCCESS,\n  FOLDER_LIST_FAIL,\n  FOLDER_LIST_RESET,\n  FOLDER_SET_REQUEST,\n  FOLDER_SET_SUCCESS,\n  FOLDER_SET_FAIL,\n  FOLDER_RESET,\n  FOLDER_DELETE_REQUEST,\n  FOLDER_DELETE_SUCCESS,\n  FOLDER_DELETE_FAIL,\n  FOLDER_DELETE_RESET,\n} from \"../consts/folderConsts\";\n\nexport const folderListReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FOLDER_LIST_REQUEST:\n      return { loading: true };\n\n    case FOLDER_LIST_SUCCESS:\n      return { loading: false, folders: action.payload };\n\n    case FOLDER_LIST_FAIL:\n      return { loading: false, error: action.payload };\n\n    case FOLDER_LIST_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const folderSetReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FOLDER_SET_REQUEST:\n      return { loading: true };\n\n    case FOLDER_SET_SUCCESS:\n      return { loading: false, folder: action.payload };\n\n    case FOLDER_SET_FAIL:\n      return { loading: false, error: action.payload };\n\n    case FOLDER_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const folderDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FOLDER_DELETE_REQUEST:\n      return { loading: true };\n\n    case FOLDER_DELETE_SUCCESS:\n      return { loading: false, success: true, folder: action.payload };\n\n    case FOLDER_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n\n    case FOLDER_DELETE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n",
    "import {\n  ALL_QUIZ_REQUEST,\n  ALL_QUIZ_SUCCESS,\n  ALL_QUIZ_FAIL,\n  ALL_QUIZ_RESET,\n  ACTIVE_QUIZ_SET_REQUEST,\n  ACTIVE_QUIZ_SET_SUCCESS,\n  ACTIVE_QUIZ_SET_FAIL,\n  ACTIVE_QUIZ_RESET,\n  QUIZ_DELETE_REQUEST,\n  QUIZ_DELETE_SUCCESS,\n  QUIZ_DELETE_FAIL,\n  QUIZ_DELETE_RESET,\n} from \"../consts/quizConsts\";\n\nexport const allQuizReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ALL_QUIZ_REQUEST:\n      return { loading: true };\n\n    case ALL_QUIZ_SUCCESS:\n      return { loading: false, quizList: action.payload };\n\n    case ALL_QUIZ_FAIL:\n      return { loading: false, error: action.payload };\n\n    case ALL_QUIZ_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const activeQuizSetReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ACTIVE_QUIZ_SET_REQUEST:\n      return { loading: true };\n\n    case ACTIVE_QUIZ_SET_SUCCESS:\n      return { loading: false, quizList: action.payload };\n\n    case ACTIVE_QUIZ_SET_FAIL:\n      return { loading: false, error: action.payload };\n\n    case ACTIVE_QUIZ_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport const quizDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case QUIZ_DELETE_REQUEST:\n      return { loading: true };\n\n    case QUIZ_DELETE_SUCCESS:\n      return { loading: false, success: true, quiz: action.payload };\n\n    case QUIZ_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n\n    case QUIZ_DELETE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\n",
    "import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport reducer from \"../reducers/reducer\";\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage,\n  },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n",
    "import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./app/App\";\nimport store from \"./store/store\";\n\nimport \"./styles/styles.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"
  ],
  "sourceRoot": ""
}
